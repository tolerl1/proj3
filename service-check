check host patelk7-client1 with address 10.2.242.102
 if failed ping then alert
         start program = "/usr/bin/systemctl start monit"

    stop program = "/usr/bin/systemctl stop monit"


#    if failed port 22 protocol ssh with timeout 15 seconds then alert
#    if failed port syslog ......
#    if failed port 389 636 protocol ldap ....
#    if failed port/service protocol nfs
#    if failed port 80 protocol http

 check process slapd with pidfile /var/run/openldap/slapd.pid
 group ldap
   start program = "/etc/init.d/slapd start" with timeout 30 seconds
   stop program = "/etc/init.d/slapd stop"
   if 3 restarts within 3 cycles then alert
   if cpu > 60% for 2 cycles then alert
   
   #if failed host 127.0.0.1 port 389 type tcp protocol ldap3 then restart
   #if 5 restarts within 5 cycles then timeout

## Check general system resources such as load average, cpu and memory
## usage. Each test specifies a resource, conditions and the action to be
## performed should a test fail.

 check system *what goes here*
   alert your.admin@example.com
   if loadavg (1min) > 4 then alert
   if loadavg (5min) > 2 then alert
   if memory usage > 80% then alert
   if cpu usage (user) > 75% then alert
   if cpu usage (system) > 40% then alert
   if cpu usage (wait) > 20% then alert

#    




## Check that a process is running, in this case Apache, and that it respond
## to HTTP and HTTPS requests. Check its resource usage such as cpu and memory,
## and number of children. If the process is not running, monit will restart 
## it by default. In case the service was restarted very often and the 
## problem remains, it is possible to disable monitoring using the TIMEOUT
## statement. This service depends on another service (apache_bin) which
## is defined above.
#    

# check process apache with pidfile /var/run/httpd/httpd.pid
#   start program = "/etc/init.d/httpd start"
#   stop program  = "/etc/init.d/httpd stop"
#   if cpu > 60% for 5 cycles then alert
#   if cpu > 80% for 5 cycles then restart
#   if totalmem > 200.0 MB for 5 cycles then restart
#   if 3 restarts within 5 cycles then timeout
# 
